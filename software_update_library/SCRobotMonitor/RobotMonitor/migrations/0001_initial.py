# Generated by Django 3.0.5 on 2020-06-02 15:40

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='firmware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Version_number', models.CharField(max_length=50, verbose_name='Номер версии')),
                ('Type', models.CharField(choices=[('VT', 'Видео башня'), ('VM', 'Видео центральное'), ('ROS', 'Прошивка ROS')], max_length=3, verbose_name='Тип прошивки')),
                ('Archieve', models.FileField(upload_to='Firmaware', verbose_name='Прошивка башни')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('inv_status', models.BooleanField(default=False, verbose_name='Скрыть из общего списка')),
            ],
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('status', models.CharField(choices=[('EX', 'Выставка'), ('AP', 'Аэропорт'), ('SE', 'Сервис'), ('ST', 'Склад'), ('PR', 'Производство')], max_length=2, verbose_name='Статус')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Страна')),
                ('town', models.CharField(blank=True, max_length=255, null=True, verbose_name='Город')),
                ('lon', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('lat', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('date_in', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('inv_status', models.BooleanField(default=False, verbose_name='Скрыть из общего списка')),
            ],
        ),
        migrations.CreateModel(
            name='robot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.PositiveIntegerField(unique=True, verbose_name='Серийный номер')),
                ('status', models.CharField(choices=[('EX', 'Эксплуатация'), ('OR', 'Ремонт'), ('NR', 'Требует ремонта'), ('BR', 'Сломан'), ('OH', 'В ожидании')], default='OH', max_length=2, verbose_name='Статус')),
                ('ekey', models.CharField(max_length=255, verbose_name='Ключ')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('inv_status', models.BooleanField(default=False, verbose_name='Скрыть из общего списка')),
            ],
        ),
        migrations.CreateModel(
            name='robot_session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('av_lon', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('av_lat', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('volt_start', models.FloatField(blank=True, null=True, verbose_name='Начальное напряжение')),
                ('volt_end', models.FloatField(blank=True, null=True, verbose_name='Конечное напряжение')),
                ('GPS_status', models.IntegerField(blank=True, null=True, verbose_name='Статус GPS')),
                ('track_file', models.FileField(blank=True, null=True, upload_to='tracks/', verbose_name='Файл GPS трека')),
                ('media_file', models.FileField(blank=True, null=True, upload_to='media_from_robot/', verbose_name='Медиа файл')),
                ('sensors_file', models.FileField(blank=True, null=True, upload_to='sensors/', verbose_name='Файл данных сенсоров')),
                ('out_status', models.CharField(choices=[('OL', 'На связи'), ('CR', 'Корректное завершение работы'), ('DC', 'Потеря связи')], max_length=2, verbose_name='Тип завершения сессии')),
                ('date_time_start', models.DateTimeField(auto_now_add=True, verbose_name='Начало записи')),
                ('date_time_end', models.DateTimeField(auto_now=True, verbose_name='Конец записи')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('inv_status', models.BooleanField(default=False, verbose_name='Скрыть из общего списка')),
                ('robot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='RobotMonitor.robot', verbose_name='Робот')),
            ],
        ),
        migrations.CreateModel(
            name='series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Distribution_key', models.CharField(max_length=255, verbose_name='Наименование серии')),
                ('SN_amount', models.PositiveIntegerField(verbose_name='Количество роботов этой серии')),
                ('SN_distributed', models.PositiveIntegerField(verbose_name='Количество выданных серийных номеров этой серии')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('inv_status', models.BooleanField(default=False, verbose_name='Скрыть из общего списка')),
            ],
        ),
        migrations.CreateModel(
            name='sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor', models.CharField(max_length=50, verbose_name='Название сенсора')),
                ('node', models.BooleanField(default=False, verbose_name='Программа')),
                ('status', models.BooleanField(default=False, verbose_name='Рабочий')),
                ('correctness', models.BooleanField(default=False, verbose_name='Корректные данные')),
                ('out_status', models.CharField(choices=[('AT', 'Автоматическая запись'), ('DM', 'Запись по требованию')], max_length=2, verbose_name='Тип записи')),
                ('date_time_in', models.DateTimeField(auto_now_add=True, verbose_name='Время прихода информации')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('inv_status', models.BooleanField(default=False, verbose_name='Скрыть из общего списка')),
                ('robot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='RobotMonitor.robot', verbose_name='Робот')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='RobotMonitor.robot_session', verbose_name='Сессия')),
            ],
        ),
        migrations.CreateModel(
            name='robot_belong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('aim', models.CharField(choices=[('EX', 'Эксплуатация'), ('EH', 'Показ'), ('RP', 'Ремонт'), ('SK', 'Хранение'), ('UT', 'Утилизация')], max_length=2, verbose_name='Цель прибывания')),
                ('limitation', models.DateTimeField(blank=True, null=True, verbose_name='Дата до которой отдан робот')),
                ('date_in', models.DateTimeField(blank=True, null=True, verbose_name='Дата прибытия')),
                ('date_out', models.DateTimeField(blank=True, null=True, verbose_name='Дата отправки')),
                ('out_status', models.CharField(blank=True, choices=[('OP', 'Рабочий'), ('NR', 'Требует ремонта'), ('BR', 'Сломан')], max_length=2, null=True, verbose_name='Состояние в котором был отправлен')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('inv_status', models.BooleanField(default=False, verbose_name='Скрыть из общего списка')),
                ('from_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RobotMonitor.robot_belong', verbose_name='Получено от')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='RobotMonitor.location', verbose_name='Место прибывания')),
                ('robot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='RobotMonitor.robot', verbose_name='Робот')),
            ],
        ),
        migrations.AddField(
            model_name='robot',
            name='series',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='RobotMonitor.series', verbose_name='Серия'),
        ),
    ]
